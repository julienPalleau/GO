
// 1-INTRODUCTION
// https://devopssec.fr/article/cours-apprendre-langage-programmation-go#begin-article-section
/*

Qu'est-ce que le langage go
Histoire

Go (prononc√© en anglais "Gow") aussi appel√© Golang est un langage de programmation open source relativement jeune, d√©velopp√©
2007 par Robert Griesemer, Rob Pike et Ken Thompson, travaillant aujourd'hui chez Google.

D√©claration des experts √† l‚Äôorigine de Go lors de son lancement

    ¬´ Chez Google, nous pensons que la programmation devrait √™tre rapide, productive et surtout, fun. C‚Äôest pourquoi nous
	sommes ravis de proposer ce nouveau langage de programmation exp√©rimental. Les op√©rations de compilation sont presque
	instantan√©es, et le code compil√© propose une vitesse de fonctionnement proche de celle du C ¬ª.
    les responsables du projet Go.

Pour r√©sum√© leur message : Le langage de programmation Go rime avec efficacit√© et simplicit√©.

Le langage de programmation Go a √©t√© lanc√© en novembre 2009 et est utilis√© dans certains syst√®mes de production de Google,
c‚Äôest celui la m√™me qui a √©t√© utilis√© pour d√©velopper le logiciel de conteneurisation Docker (c'est d'ailleurs avec le projet
Docker que j'ai connu pour la premi√®re fois ce langage).
Comparaison avec d'autres langages

Go est syntaxiquement similaire au langage C mais contrairement au C il poss√®de une s√©curit√© de la m√©moire avec un Garbage
Collector et c'est un langage √† typage statique (les types des variables sont connus lors de la compilation et doivent √™tre
sp√©cifi√©s express√©ment par le programmeur) comme dans d'autres langages de programmation √† savoir le Java, le C ou le C++.

Go est souvent compar√© au langage Python car tous les 2 se veulent tr√®s simples syntaxiquement. Personnellement je trouve
python est plus simple syntaxiquement mais Python reste tout de m√™me un langage interpr√©t√©, contrairement √† Go qui est un
langage compil√©.

Disclaimer : pas de gu√©guerre de langage ici :p, chaque langage de programmation a ses avantages et ses inconv√©nients, √ßa ne
m‚Äôemp√™che pas d'utiliser Python sur plusieurs projets voir m√™me de combiner les deux langages, tout d√©pend simplement des
besoins üòâ.
Rappel sur les langages interpr√©t√©s et langages compil√©s

Certains d'entre vous ont peut √™tre utilis√© que des langages de programmation interpr√©t√©s, si c'est le cas alors une petite
explication s'impose pour ainsi commencer avec des bonnes bases :

    Dans un langage interpr√©t√©, le code source est interpr√©t√©, par un autre logiciel nomm√© l‚Äôinterpr√©teur, celui-ci traduit au
	fur et √† mesure les instructions de votre programme.
    Dans un langage compil√©, le code source est tout d'abord compil√© en langage binaire c‚Äôest une suite de 0 et de 1 uniquement
	compr√©hensible par votre machine par un autre logiciel qu'on appelle le compilateur.

Avantages et inconv√©nients des langages interpr√©t√©s et langages compil√©s

Un programme √©crit dans un langage compil√© a l'avantage de ne plus avoir besoin une fois compil√© de programme annexe pour
s'ex√©cuter (un langage interpr√©t√© aura toujours besoin de son interpr√©teur), de plus comme votre code est ex√©cut√© directement
par votre machine alors le temps d‚Äôex√©cution de votre programme sera en g√©n√©ral plus rapide pour le m√™me programme dans un
langage interpr√©t√©.

Cependant pour chaque modification de votre code source il faudra recompiler le programme pour que les modifications prennent
effet, ensuite votre programme compil√© n‚Äôest pas multi-plateforme il faudra donc cr√©er un ex√©cutable pour chaque syst√®me
d‚Äôexploitation √† l‚Äôinverse d‚Äôun l'inverse d‚Äôun langage interpr√©t√© qui lui reste en g√©n√©ral multi-plateforme.
Revenons √† nos moutons !

Donc pour revenir √† notre langage Go, c'est un langage qui se veut accessible et rapide pour une programmation √† grande
√©chelle, il est donc concevable de l'utiliser aussi bien pour √©crire des applications, des scripts ou sur d'autres types des
gros projets.
Les avantages du langage GO

Voici une courte liste d'avantages du langage GO :

    Une meilleure protection de la m√©moire gr√¢ce √† son ramasse-miettes (Garbage Collector) qui permet une gestion automatique
	de la m√©moire.
    Profite de la puissance de calcul des processeurs les plus robustes du march√© (processeurs multi-c≈ìurs).
    Possibilit√© de faire du typage dynamique et int√®gre de nombreux types avanc√©s tels que les mappages cl√©-valeur.
    Poss√®de une riche biblioth√®que standard, qu‚Äôil est m√™me tout √† fait possible de concevoir des programmes √©crit avec le
	langage Go sans aucune d√©pendance externe.
    Une base de code propre n√©cessaire aussi pour assurer la maintenance et l'√©volution des programmes sur plusieurs
	g√©n√©rations d√©veloppeurs.
    Poss√®de un temps de compilation rapide et int√®gre aussi un syst√®me de build beaucoup moins compliqu√© que celui de la
	plupart des langages de compil√©s.
    Au niveau de la portabilit√© il est possible de compiler votre code pour une large gamme de syst√®mes d'exploitation et de
	plateformes mat√©rielles (Windows, Linux, MAC OS, Android, IOS).

Utilisation du langage GO

On retrouve le langage Go dans les domaines suivants (liste non exhaustive) :

    Serveurs
    Web
    Syst√®mes embarqu√©s
    IOT (Internet Of Things)
    Android
    IOS
    Jeux-vid√©os
    etc ...

Liste non exhaustive des entreprises utilisant Go :

    CloudFlare
    CoreOS
    DropBox
    Docker
    Nokia
    Ovh
    YouTube
    SoundCloud
    Splice
    etc ...

Public vis√©

Ce tutoriel est con√ßu pour des programmeurs ou des curieux ayant besoin de comprendre le langage de programmation Go √† partir de z√©ro. Ce tutoriel vous donnera une compr√©hension suffisante du langage de programmation Go, qui vous permettra d‚Äôatteindre des niveaux d‚Äôexpertise plus √©lev√©s.
*/